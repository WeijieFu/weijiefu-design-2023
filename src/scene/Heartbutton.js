/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import gsap from "gsap"
import React, { useEffect, useRef } from "react"
import { useGLTF } from "@react-three/drei"
import { useFrame } from "@react-three/fiber"
import useNavStore from "../../state/navigation"

export default function Model(props) {
  const group = useRef()
  const model = useRef()
  const arrow = useRef()
  const nav = useNavStore()
  const { nodes, materials } = useGLTF("/assets/model/heartbutton.glb")

  useFrame((state) => {
    const time = state.clock.elapsedTime
    model.current.position.z = Math.sin(time) * 0.05
    model.current.rotation.y = Math.sin(time) * 0.2

    arrow.current.rotation.z = Math.sin(time * 5) * 0.1
  })

  useEffect(() => {
    if (nav.current === "uiux") {
      gsap.to(group.current.position, {
        y: -1,
        duration: 0.5,
        ease: "power2.out",
      })
    } else {
      gsap.to(group.current.position, {
        y: -2,
        duration: 0.5,
        ease: "power2.out",
      })
    }
  }, [nav.current])

  return (
    <group
      {...props}
      dispose={null}
      ref={group}
      position={[-2.2, -1, 3.1]}
      rotation={[Math.PI / 2, -0.3, 0.5]}
    >
      <group ref={model}>
        <mesh geometry={nodes.Base.geometry}>
          <meshStandardMaterial color="white" />
        </mesh>
        <mesh geometry={nodes.Heart.geometry}>
          <meshStandardMaterial color="hotpink" />
        </mesh>
        <mesh geometry={nodes.Arrow.geometry} ref={arrow}>
          <meshStandardMaterial color="lightgrey" />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload("/assets/model/heartbutton.glb")
